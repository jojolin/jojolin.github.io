---
layout: post
title: 对写程序的思考
date: 2016-10-11 23:30:19 +0800
categories: note program
---
积累和思考，记之以勿忘。

- 好的工具帮助培养好的习惯
- 资源的配置和程序逻辑的配置
- 方向布局， 需求变动要形成文档，想做的东西越多，越无法完成。写下你的想法，先有总体规划，原型，简单版，完善完善～
- 做事情的节奏，文档化，规划
- 对简单到复杂的技术构建过程有充分的了解，但产品从无到有的一开始不应该过于设计，只保留扩展的接口， 不然还没等到架构出来时产品已经落后。至少要有八成的需求规划和技术细节规划，才可以开始做这件事情
- 良好的约定比技巧更能增强程序的强壮性
- 定义良好的接口，符合可扩展的需求
- 除非一次性脚本，每一份代码都必须以发布成库的逻辑去写，然后在库的上面在搭建对应的接口，不然，在衔接各个部件时就会很难调和
- 在写各个模块时，如果一开始无法统一架构，就尽量保持各个模块的独立性，同时，对外的接口尽量保持灵活，方便后期改造
- 要分层构建代码，底层接口，业务接口，用户接口。底层的接口要根据最原始的资源，别名映射，根据映射写用户友好接口。新的用户接口，另起写，新的业务接口，另起写，不要想着复用，这两层基本无法复用，命名约定
- 对于独立的单元要解耦成独立的进程，进程通过接口或消息对外进行通讯或提供服务，对于耗时的环节要添加缓存
- 对于存在不稳定性因素较多的流程，要同时具备多个入口调度程序，以确保系统的可控制性，对于流程较多而时间又紧迫的情况，设计好各个模块的衔接，然后逐步添加到流程中去
- 有些配置是约定而少变动的，有些配置是经常变动的，放在一个统一的位置读取，以便不同的项目合作，定义一个配置模块，管理共同的和特定的配置
- 写一个应用之前要先定义好可能出现的异常和错误情况，并有充分的日志记录和统一的格式用于后期排查和处理
- 多人合作，必先解决接口的问题，再自己解决内部的问题
- 项目时间的预估～预测完成多少任务，任务完成时间，完成过程中碰到的问题，新加入的临时的紧急的bug，推迟原来的预估
- 计划新版本，需要了解完成的工作量，需要明确目的
- 任务时间表管理～todolist 
- 规范化的文档，每人负责各自的文档编写，存链接
